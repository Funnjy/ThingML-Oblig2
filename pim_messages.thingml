/* This file contains message and port definitions for the PIM communication */

import "datatypes.thingml"

// General
thing fragment GeneralMsg {
	message sensorinfo(model:String,proto:String,sid:Integer,dataTypes:Integer,temperature:Double, humidity:Long, timeStamp:Long);
	message deviceinfo(did:Integer,name:String,model:String,proto:String, ttype:String,meth:Integer,lastCmd:String,lastValue:Long);
	message set_polling_interval(intrvl:Integer) // how often the PSM will poll the thermometers in milliseconds
	message prompt(txt:String) // meant to send a textual message out to the user
	message tp_info(c_min:Double, c_max:Double, c1_b:Integer, c2_b:Integer, c3_b:Integer)
}
/*thing fragment TimePeriods{
	message add_period(name:String, stime:Integer, etime:Integer, comfort_t:Double, cat1:Integer, cat2:Integer, cat3:Integer)
}*/

//Temperature
thing fragment TemperatureMsg {
    message temperature(id:Integer, txt:String, t:Double);
    message add_thermometer(id:Integer,txt:String, w:Double);
    message set_temperature(t:Double);
   	message add_period(name:String, sh:Integer, sm:Integer, eh:Integer, em:Integer, comfort_min:Double, comfort_max:Double, cat1:Integer, cat2:Integer, cat3:Integer)
   	message set_time(current_h:Integer, current_m:Integer)
   	message get_time(current_h:Integer, current_m:Integer)
}

// Devices actuators in general

thing fragment DeviceGeneral {
	message add_device(did:Integer, name:String, cat:Integer);
}

// On/Off actuators
thing fragment OnOffMsg includes DeviceGeneral{
	message SwitchOn(did:Integer);
	message SwitchOff(did:Integer);
}

